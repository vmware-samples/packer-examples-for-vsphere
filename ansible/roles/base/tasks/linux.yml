---
# VMware Photon OS

- block:
  - name: "Updating the operating system."
    command: "tdnf -y update"
  when: ansible_os_family == 'VMware Photon OS' and ansible_distribution_version | int >= 5

- block:
  - name: "Updating repository URL"
    shell: |
      cd /etc/yum.repos.d/
      sed -i 's/dl.bintray.com\/vmware/packages.vmware.com\/photon\/$releasever/g' photon.repo photon-updates.repo photon-extras.repo photon-debuginfo.repo

  - name: "Updating the photon-repo."
    command: tdnf -y update photon-repos

  - name: "Cleaning the cache."
    command: tdnf clean all

  - name: "Making cache."
    command: tdnf makecache

  - name: "Updating the operating system."
    command: tdnf -y update
  when: ansible_os_family == 'VMware Photon OS' and ansible_distribution_version | int <= 4

- block:
  - name: "Installing additional packages."
    command: "tdnf -y install {{ additional_packages[ansible_os_family] | join(' ') }}"
  when: ansible_os_family == 'VMware Photon OS'

# Debian or derivatives.

- block:
  - name: "Updating the operating system."
    apt:
      name: "*"
      state: latest     # noqa package-latest
      force_apt_get: true
      update_cache: true

  - name: "Installing Cloud-init."
    apt:
      name: cloud-init
      state: latest
    when: ansible_os_family == 'Debian' and ansible_distribution_version | int >= 12

  - name: "Installing additional packages."
    apt:
      name: "{{ additional_packages[ansible_os_family] }}"
      state: latest     # noqa package-latest
  when: ansible_os_family == 'Debian'

# Red Hat Enterprise Linux or derivatives.

- name: "Checking the Red Hat Subscription Manager status."
  command:
    cmd: subscription-manager status
  register: result
  failed_when: "'ERROR' in result.stderr"
  when: ansible_distribution == 'RedHat'

- name: "Upgrade almalinux-release package."
  dnf:
    name: almalinux-release
    state: latest
  become: true
  when: ansible_distribution == 'AlmaLinux'

- name: "Installing Cloud-init."
  dnf:
    name: cloud-init
    state: latest
  when: ansible_distribution == 'AlmaLinux' and ansible_distribution_version | int >= 8 and enable_cloudinit == 'true'

- block:
  - name: "Updating the operating system."
    dnf:
      name: "*"
      state: latest     # noqa package-latest
      update_cache: true

  - name: "Installing Cloud-init."
    dnf:
      name: cloud-init
      state: latest
    when: enable_cloudinit == 'true'

  - name: "Installing additional packages."
    dnf:
      name: "{{ additional_packages[ansible_os_family] }}"
      state: latest     # noqa package-latest
  when:
    - ansible_distribution == 'Fedora' and ansible_distribution_major_version | int >= 40
    - ansible_os_family == 'RedHat' and ansible_distribution_major_version | int >= 8

- block:
  - name: "Updating the operating system."
    yum:
      name: "*"
      state: latest     # noqa package-latest
      update_cache: true

  - name: "Installing additional packages."
    yum:
      name: "{{ additional_packages[ansible_os_family] }}"
      state: latest     # noqa package-latest
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version | int < 8


# SUSE Linux Enterprise Server

- block:
  - name: "Updating the operating system."
    zypper:
      name: "*"
      state: latest
      update_cache: true

  - name: "Installing additional packages."
    zypper:
      name: "{{ additional_packages[ansible_os_family] }}"
      state: latest
  when: ansible_os_family == 'Suse'
